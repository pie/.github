name: "Deploy via Rsync"
description: "Adds our private SSH key to the workflow runner so that it can access the remote server"
inputs:
  destination-path:
    description: "Destination path to copy files"
    required: true
  rsync-args:
    description: "Arguments to pass to rsync"
    required: false
    default: "--no-perms --no-times --no-owner --delete-after"
  rsync-flags:
    description: "Flags to pass to rsync"
    required: false
    default: "-aqP"
  ssh-host:
    description: "SSH host to use"
    required: true
  ssh-port:
    description: "SSH port to use"
    required: false
    default: 22
  ssh-user:
    description: "SSH user to connect"
    required: false
    default: "piecode"
  composer:
    description: "Run composer install"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Check out the Repo
      uses: actions/checkout@v3
    - name: Install Composer Dependencies if required
      if: ${{inputs.composer == 'true' }}
      uses: php-actions/composer@v6
      with:
        command: install
        args: --no-dev --no-interaction --no-progress --optimize-autoloader --prefer-dist
    - name: Check for ignore file
      id: check_files
      uses: andstor/file-existence-action@v2
      with:
        files: ".rsyncignore"

    - name: File exists
      if: steps.check_files.outputs.files_exists == 'true'
      shell: bash
      # Only runs if all of the files exists
      run: |
        echo EXCLUDE_FROM=" --exclude-from=.rsyncignore " >> "$GITHUB_ENV"

    - name: File does not exist
      if: steps.check_files.outputs.files_exists != 'true'
      shell: bash
      # Only runs if any of the files does not exist
      run: |
        echo EXCLUDE_FROM="" >> "$GITHUB_ENV"

    - name: Rsync to the remote
      run: rsync ${{inputs.rsync-flags}}  ${{inputs.rsync-args}} ${{ env.EXCLUDE_FROM }} . server:${{inputs.destination-path}}
      shell: bash